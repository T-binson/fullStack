1.（基础，输出）网页一打开，要求依次弹出数字1-6，并且每弹出一次，页面就显示出对应的一个标题行（即从h1-h6）。注意，页面中不应该出现h1-h6的标签，而应该是由js写出来的。

2.（数据类型）定义若干个js变量，需表现出js中的各种数据类型，并在页面中输出每个变量的值和其对应类型。
	let [str,num,bol,obj,fuc,unf,nl]  = ['string',123,true,{a: 1},function() {},undefined,null];

3.（赋值传值/引用传值）读程序，写结果：
（1）（2）

4.（表达式）已知任意两个正整数（a，b），将其作为直角三角形的直角边长，求斜边长。
		Math.sqrt(a*a + b*b);

5.（运算符）位运算：计算100右移2位的结果，以及左移3位的结果。	
		var num = 100;
		num>>2;
		num<<3;

6.（表达式，运算符）一个小球从空中掉下来，求如下问题：
a)如果已知小球掉落时高度（1000m），求其触地瞬间的速度；Math.sqrt(2*g*h);
b)如果已知小球落地瞬间的速度（1000m/s），求其掉落时的高度）
c)附自由落体公式：自由落体运动的规律：2gh=v^2。；（其中g是重力加速度，在地球上g≈9.8m/s2；v是速度，h高度)

7.（分支结构）定义一个变量表示“分数” 并给其赋值，在页面中是根据分数高低不同输出如下文字：
优秀（>=90），良好（>=80），中等（>=70），及格（>=60），不及格（其他情况）。
——使用if和switch两种方法来做实现。

8.（流程：分支与循环）输出从2000年（含）到3000年（含）间的所有闰年。
	for(var i = 2000;i<=3000;i++) {
		if(i%4 === 0 && i%100 !== 0 || i%400 === 0 && i%3200 !== 0) {
			console.log(i);
		}
	}

9.（循环）使用星号输出倒金字塔图案(行数由初始变量n确定)：
	var n = 5;
	for(var i =n;i>0;i--) {
			var stars = "";
			for(var j = i;j>0;j--) {
				stars += "*";
			}
			console.log(stars);
	}

10.（循环，分析）一张纸的厚度是0.01毫米，则该纸对折30次后是多厚（据说超过珠穆朗玛峰的高度）。反过来，一张纸对折几次后，就超过1米厚了？
	let i = 0;
	while(0.01*Math.pow(2,i) <= 1000) {
	    i++;
	};
	i;//17

11.（循环，逻辑分析）输出2-200之间的所有素数（素数就是只能被1和其本身整除的数）。
	let arr = [],j =0;
	for(let i = 2;i<=200;i++,j++) {
		arr.push(i);
		for(let n = Math.floor(Math.sqrt(i));n>1;n--) {
				if(i%n === 0) {
					arr[j] = '';
					break;
				}
		}
	}
	let set = new Set(arr);
	let newArr = Array.from(set);
	newArr.splice(2,1);

	let arr = [],j =0;
	for(let i = 2;i<=200;i++,j++) {
		arr.push(i);
		for(let n = Math.floor(Math.sqrt(i));n>1;n--) {
				if(i%n === 0) {
					arr[j] = '';
					break;
				}
		}
	}
	var newarr = [];
	for(var i = 0;i<arr.length;i++) {
		if(arr[i] !== "") {
			newarr.push(arr[i]);
		}
	}

	var flag = true;
    for(var i=2; i<=200; i++) {
        for(var j=2; j<i; j++) {
            if(i%j == 0) {
                flag = false;
                break;
            }
        }
        if(flag) {
            document.write('素数为:' + i + '<br />');
        }
        flag = true;
    }

12.（循环，简单运算）使用3种循环语句计算1到100的所有数的平方和。
		for:
		var sum = 0;
		for(var i = 1;i<=100;i++) {
			sum += Math.pow(i,2);
		}

		while:
		var sum = 0,
					i =1;
		while(i<=100) {
			sum += Math.pow(i,2);
			i++;
		}

		do...while:
		var sum = 0,
					i = 1;
		do {
			sum += Math.pow(i,2);	//sum += Math.pow(i++,2);
			i++;
		}while(i<=100)

13.（循环，简单逻辑）写一个程序打印1到100这些数字。但是遇到数字为3的倍数的时候，打印“Fizz”替代数字，5的倍数用“Buzz”代替，既是3的倍数又是5的倍数打印“abcde”。
	for(let i =1;i<101;i++) {
		if(i % 3 === 0 && i % 5 === 0) {
			console.log('abcde');
		}else if(i % 3 === 0) {
			console.log('Fizz');
		}else if(i % 5 === 0) {
			console.log('Buzz');
		}else {
			console.log(i);
		}
	}

14.（循环，while，逻辑分析）假设某人有100,000现金。每经过一次路口需要进行一次交费。交费规则为当他现金大于50,000时每次需要交5%,如果现金小于等于50,000时每次交5,000。请写一程序计算此人可以经过多少次这个路口。
	let sum = 100000,count =0;
	while(sum >= 5000) {
		if(sum > 50000) {
			sum -= sum*0.05;
			console.log(sum);
		}else if(sum <= 50000) {
			sum -= 5000;
			console.log(sum);
		}
		count++;
	}
	console.log(count,sum);

15.（循环，逻辑分析）有红、白、黑三种球若干个，其中红、白球共25个，白、黑球共31个，红、黑球共28个，求这三种球各多少个？
	for(var red = 1;red<25;red++) {
		for(var white = 1;white<31;white++) {
			for(var black = 1;black<28;black++) {
				if(red + white === 25 && white + black === 31 && red + black === 28) {
					console.log(red,white,black);
				}
			}
		}
	}

16.（循环，逻辑分析）输入一个小于10的正整数（比如5），输出如下图案：
	55555
	4444
	333
	22
	1
	22
	333
	4444
	55555

	var n = 5;
	for(var j = n;j>0;j--) {
		var sum = 0;
		for(var i = j;i>0;i--) {
			sum += j*Math.pow(10,i-1);
		}
		console.log(sum);
		if(j === 1) {
			for(var k = j + 1;k<=n;k++) {
				sum = 0;
				for(var l = k;l>0;l--) {
					sum += k*Math.pow(10,l-1);
				}
				console.log(sum);
			}
		}
	}

	var n = 8;
  for(var i=n; i>0; i--) {
        for(var j=1; j<=i; j++) {
            document.write(i);
        }
        document.write('<br />');
  }
  for(var k=2; k<=n; k++) {
        for(var t=1; t<=k; t++) {
            document.write(k);
        }
        document.write('<br />');
  }
		
17.（函数，逻辑）定义一个函数，该函数用于判断所给的年份数是否是一个闰年。
	function leapyear(year) {
		if(year%4 === 0 && year%100 !== 0 || year%400 === 0 && year%3200 !== 0) {
			return true;
		}else {
			return false;
		}
	}

18.（函数）定义一个函数，该函数可以计算任意两个正整数的“弦”值（勾股定律）。
		function xz(a,b) {
      document.write(a + '和' + b + '弦值是' + Math.sqrt(Math.pow(a,2) + Math.pow(b,2)));
	  } 

19.（函数）定义一个函数，该函数用于计算一个正数的因子和（比如6的因子和是1+2+3+6=12）
	function sum(n) {
	var total = 0;
		if(n < 1) {
			return false;
		}else {
			for(var i =1;i<=n;i++) {
				if(n%i === 0) {
					total += i;
				}
			}
			return total;
		}
	}

20.（函数）定义一个函数，该函数可以求两个正数的最大公约数。
		function num(a,b) {
			if(a>0 && b>0) {
				if(a >= b) {
					for(var i = b;i>0;i--) {
						if(a%i === 0 && b%i === 0) {
							return i;
							break;
						}
					}
				}else {
					for(var j = a;j>0;j--) {
							if(a%j === 0 && b%j === 0) {
								return j;
								break;
							}
					}
				}
			}else {
				return false;
			}
		}

21.（函数）定义一个函数，该函数可以求两个正数的最小公倍数。
		function num(a,b) {
			if(a>0 && b>0) {
				if(a >= b) {
					for(var i = b;i>0;i--) {
						if(a%i === 0 && b%i === 0) {
							return a * b / i;
							break;
						}
					}
				}else {
					for(var j = a;j>0;j--) {
							if(a%j === 0 && b%j === 0) {
								return a * b / j;
								break;
							}
					}
				}
			}else {
				return false;
			}
		}

22.（函数，递归）求20的阶乘（20！）
		function factorial(n) {
			if(n === 0 || n === 1) {
				return 1;
			}
			return n * factorial(n-1);
		}

		尾递归:
		function tailFactorial(n, total) {
		  if (n === 1) return total;
		  return tailFactorial(n - 1, n * total);
		}
		function factorial(n) {
		  return tailFactorial(n, 1);
		}

23.（函数，递归）数列如下：1，2，4，8，16，32… ，求第20项的值是多少？
		function num(n) {
				if(n === 0) {
					return false;
				}else if(n === 1) {
					return 1;
				}
				return num(n - 1) * 2;
		}

24.（函数，递归）数列如下：1，2，3，6，9，18，27… ，求第20项的值是多少？
		function num(n) {
			if(n === 0) {
				return false;
			}else if(n%2 === 0) {
				return 2 * num(n-1);
			}else {
				return Math.pow(3,(n-1)/2);
			}
		}

		function sl(num) {
        if(num <= 0) {
            document.write('请输入一个大于零的数字');
            return;
        }
        if(num == 1) {
            return 1;
        }
        if(num == 2) {
            return 2;
        }
        if(num%2 == 0) {
            return nu = sl(num - 1) + sl(num - 2) + sl(num - 3);
        } else {
            return nu = sl(num - 1) + sl(num - 2);
        }
    }

25.（数组）定义一个数组，并输入6个值，代表本小组同学的各自年龄，求本小组同学的平均年龄。
		var arr = [22,19,18,15,12,21];
		var sum = arr.reduce((a,b) => {return a + b;})
		var average = sum/arr.length;

26.（数组）定义一个数组，输入7个任意的数值，求该数组中的最大值和最小值以及各自的下标各为多少？
		var arr = [2,4,8,9,22,11,42];
		arr.sort((a,b) => {return a - b;});//已改变原数组，因此无法获取max和min的索引值
		var min = arr[0];
		var max = arr[arr.length-1];

		var max = arr[0];
		var min = arr[0];
		for(var i = 1;i<arr.length;i++) {
			max = Math.max(max,arr[i]);
			min = Math.min(min,arr[i]);
		}
		for(var i = 0;i<arr.length;i++) {
			if(arr[i] === max) {
				var maxindex = i;
			}else if(arr[i] === min) {
				var minindex = i;
			}
		}

		var max,n1;
    var min,n2;
    max = arr[0];
    min = arr[0];
    for(var i=1; i<arr.length; i++) {
        if(arr[i] > max) {
            max = arr[i];
            n1 = i;
        }
        if(arr[i] < min) {
            min = arr[i];
            n2 = i;
        }
    }

    es5:
    	Math.max.apply(null,arr);
    	Math.min.apply(null,arr);
    es6:
    	Math.max(...arr);
    	Math.min(...arr);
    	
27.（数组）定义一个数组，输入8个任意的数值，求该数组中大于平均值的数的个数，和小于平均值的个数。
		var arr = [22,19,18,15,12,21,12,33];
		var sum = arr.reduce((a,b) => {return a + b;})
		var average = sum/arr.length;

		var c1=c2=0;
		for(var i =0;i<arr.length;i++) {
			if(arr[i]>average) {
				c1++;
			}else if(arr[i]<average) {
				c2++;
			}
		}

28.（数组）定义一个数组，输入9个任意的数值，求该数组中奇数的个数和奇数的平均值。
			var arr = [2,3,9,11,17,5,6,16,13],
					count = 0,
					sum = 0;
			for(var i = 0;i<arr.length;i++) {
				if(arr[i]%2 !== 0) {
					count++;
					sum += arr[i];
				}
			}
			var average = sum/count;

29.（二维数组）定义一个二维数组（3行4列），输入任意12个数值，求该数组的平均值，最大值，最小值，“4周边上”元素的和，以及两个下标均为奇数的和。
		var arr = [[1,3,5,7],[2,4,6,8],[9,10,11,12]],
				sum = 0,
				average = 0,
				max = 0,
				min = 0,
				total = 0,
				newArr = [],
				oddArr = [];
		for(var i = 0;i<arr.length;i++) {
			if(Array.isArray(arr[i])) {
				for(var j = 0;j<arr[i].length;j++) {
					newArr.push(arr[i][j]);
				}
			}else {
				newArr.push(arr[i]);
			}
		}
		sum = newArr.reduce((a,b) => {
			return a + b;
		});
		average = sum/newArr.length;
		max = Math.max(...newArr);
		min = Math.min(...newArr);

		for(var i = 0;i<arr.length;i++) {
			if(Array.isArray(arr[i]) && i%2 !== 0) {
				for(var j = 0;j<arr[i].length;j++) {
					if(j%2 !== 0) {
						oddArr.push(arr[i][j]);
					}
				}
			}else if(i%2 !==0) {
				oddArr.push(arr[i]);
			}
		}
		total = oddArr.reduce((a,b) => {return a + b;});

30.（数组）将一个数组的各个元素的顺序反转过来。
		var arr = [1,3,2];
		arr.reverse();//改变原数组

		var arr = ['2','4','3','7'];
		var len = arr.length%2?(arr.length-1)/2:arr.length/2;
		for(var i = 0;i<len;i++) {
			var temp = arr[i];
			arr[i] = arr[arr.length -1-i];
			arr[arr.length -1-i] = temp;
		}

31.（数组）使用冒泡排序法将一个数组进行倒序排列。
		for(var i = 0;i<arr.length;i++) {
			for(var j = i+1;j<arr.length;j++) {
				if(arr[i] > arr[j]) {
					var temp = arr[i];
					arr[i] = arr[j];
					arr[j] = temp;
				}
			}
		}

32.（数组）假设一个数组存储着一个班级的学生姓名，一名老师在录入学生信息的过程中，需要判断一个学生的姓名是否已经存在于该数组，如果存在，在提示“该学生已录入！”，否则就正式记入该数组中。请写一个程序来模拟老师录入学生信息的过程。
		var arr = [];
		var input = window.prompt('Please input your name:');
		for(var i =0;i<arr.length;i++) {
			if(arr[i] === input) {
				alert('该学生已录入！');
				input = '';
			}else {
				arr.push(input);
			}
		}

33.（数组，难）请写一个函数，函数带一个参数（作为数值数组），函数的功能是找出该数组中的“第二大值”（即函数会返回一个值，此值是该数组的第二大的数值）。
		function secvalue(arr) {
			var max = arr[0],secArr = [];
			for(var i = 1;i<arr.length;i++) {
				if(arr[i]>max) {
					max = arr[i];
				}
			}
			for(var j = 0;j<arr.length;j++) {
				if(arr[j] !== max) {
					secArr.push(arr[j]);
				}
			}
			return Math.max(...secArr);
		}

		function sec(arr) {
			for(var i = 0;i<arr.length;i++) {
				for(var j =i + 1;j<arr.length;j++) {
					if(arr[i] < arr[j]) {
						var temp = arr[i];
						arr[i] = arr[j];
						arr[j] = temp;
					}
				}
			}
			return arr[1];
		}

34.（字符）用document.write在网页上输出如下文字（注意换行）：
	js中的几个常用特殊字符有：
	回车（\n） 	document.write('\\n<br >');
	换行（\r）	document.write('\\r<br >');
	单引号（’）	document.write("\'<br >");
	双引号（’’）document.write('\"<br >');
	反斜杠（\）	document.write('\\<br >');

35.（字符）判断一个字符（比如”a”）是否出现在另一个字符（比如”2340sadfj2affa2”）中，如果出现，并求出现了几次。
		var  str = '2340sadfj2affa2';
		var count = 0,match = 'a';
		var strArr = str.split('');
		for(var i = 0;i<strArr.length;i++) {
			if(strArr[i] === match ) {
				count++;
			}
		}

		function matchStr(str,match) {
			var count = 0,strArr = str.split('');
			var len = strArr.length;
			for(var i = 0;i<len;i++) {
				if(strArr[i] === match) {
					count++
				}
			}
			return count;		}

36.（字符，偏难）将一个字符串（比如”230weo2323qraf”）中的某个字符(比如”3”)全部替换为另一个字符（比如”888”）。
		var str = '230weo2323qraf';
		var reg = /3/g;
		str.replace(reg,'888');

37.（字符）获取一个长文件路径（比如”E:\luodh\itcast\class\php120912\js\day2\abc.html”）中的文件名及其后缀（结果应该为”abc”和”html”）。
		var reg = /(\w+)\.(\w+)/;
		var fileName = 'E:\\luodh\\itcast\\class\\php120912\\js\\day2\\abc.html';	//一个反斜杠会被当成转义字符，跟后面的字母组合，如\n等，如果组合没有意义则自动忽略掉这个反斜杠
		reg.exec(fileName)[1];
		reg.exec(fileName)[2];

38.（字符，难）去除一个字符串两端的空格(比如”   ab  cd  “，结果应该为”ab  cd”)
		var str = '   ba dc  ';
		var reg = /^\s*|\s*$/g;
		str.replace(reg,'');

39.（字符）将字符串” 24292382028424”以“2”为分隔符分割为数组，并求出数组的长度。
		var str = '24292382028424';
		var strArr = str.split('2');
		var len = strArr.length;

40.（字符）将字符串”24292382028424”中的“2”全部清除。
		var str = '24292382028424';
		var reg = /2/g;
		str.replace(reg,'');

		var str = '24292382028424';
    // 去除字符中的 字符 2
    var arr = str.split('');
    for(var i=0; i<arr.length; i++) {
        if(arr[i] == '2') {
            arr.splice(i,1);
        }
    }
    str = arr.join('');

41.（字符）利用var s1 = prompt(“请输入任意字符”,””)可以获取用户输入的字符（存到变量s1中了），试编程将用户输入的字符“反转顺序”并首尾字母转为大写其他字母转为小写后alert出来。
	var s1 = window.prompt("请输入任意字符","");
	var arr = s1.split('');
	var newStr = arr.reverse().join('').toLowerCase();
	newStr = newStr[0].toUpperCase() + newStr.substring(1,newStr.length-1) + newStr.substr(-1,1).toUpperCase();

42.（Math）求圆周率PI的5次方，并四舍五入取整。
		Math.round(Math.pow(Math.PI,5));

43.（Math）写一段程序，要求每次刷新页面，就会在页面中显示6个两位数的整数，且此六个数不能有重复数。
		for(var i = 0;i<6;i++) {
			document.write(Math.floor(Math.random()*100)+ ' ');
		}
		
44.（Math）编写一个函数，带一个参数n，在页面上输出1~n（n>1）之间所有能同时被3，5整除的偶数，并要求每行只输出6个（即超过6个后要换行再输出）。
		function evens(n) {
			var count = 1;
			if(n<1) {
				return;
			}else {
				for(var i = 1;i<=n;i++) {
					if(i%3 === 0 && i%5 === 0 && i%2 === 0) {
						if(count === 6) {
							document.write(i + '<br >');
							count = 1;
							continue;
						}
						document.write(`${i} `);
						count++;
					}
				}
			}
		}

		function getNum(n) {
        var cont = 0;
        for(var i=1; i<=n; i++) {
            if(i % 3 == 0 && i % 5 == 0 && i % 2 == 0) {
                cont++;
                document.write(i + '&nbsp;');
                if(cont % 6 == 0) {
                    document.write('<br />');
                }
            }
        }
    }

45.求出有哪几个3位数符合这样的条件：这个数的各个位数上的数的立方和等于这个数本身（这种数叫做水仙花数）。
	for(var i = 100;i<=999;i++) {
		var arr = (i+'').split('');
		var first = arr[2];
		var sec = arr[1];
		var third = arr[0];
		var sum = Math.pow(third,3) + Math.pow(sec,3) + Math.pow(first,3);
		if(sum === i) {
			console.log(i);
		}
	}

	for(var i=100; i<=999; i++) {
    if(Math.pow(i.toString().charAt(0),3) + Math.pow(i.toString().charAt(1),3) + Math.pow(i.toString().charAt(2),3) == i) {
        document.write(i + '<br />');
    }
  }

46.（Date）在页面上显示当前日期、时间和星期。
		document.write(new Date());

47.（Date）求离地球末日还有几天（加入2012年12月30日为地球末日）。
		var birthTime = new Date('2012,12,30').getTime();
		var today = new Date().getTime();
		document.write((today - birthTime)/1000/60/60/24 + ' days');

48.（Date）计算一下自己从出生到现在活了多少天了？
		var birthTime = new Date('1991,12,29').getTime();
		var today = new Date().getTime();
		document.write((today - birthTime)/1000/60/60/24 + ' days');

49. 打印九九乘法表（用表格做）
	